Problem Statement
In the kingdom of Techlandia, a powerful sorcerer named Zael has hidden treasures in an enchanted vault, and the only way to open it is by entering a secret password. However, Zael has set two conditions for the password:

Every number in the password must appear an even number of times.
At least one number must appear exactly twice.
To solve the puzzle, adventurers must verify if the password meets these conditions and also identify the most frequent element in the password. If they succeed, the vault will open, revealing the treasures hidden inside. The fate of Techlandiaâ€™s treasures depends on solving this magical riddle!







#include <stdio.h>
#include <stdlib.h>

// Comparator for qsort
int cmp(const void *a, const void *b) {
    int x = *(int*)a;
    int y = *(int*)b;
    return (x > y) - (x < y);
}

void validate_password(int* password, int size) {
    // Sort the array
    qsort(password, size, sizeof(int), cmp);

    int valid = 1;               // assume valid until proven otherwise
    int has_exactly_two = 0;     // track if any number appears exactly twice
    int max_freq = 0;
    int most_frequent = password[0];

    for (int i = 0; i < size;) {
        int j = i;
        while (j < size && password[j] == password[i]) {
            j++;
        }
        int freq = j - i;

        // Condition checks
        if (freq % 2 != 0) valid = 0;
        if (freq == 2) has_exactly_two = 1;

        // Update most frequent
        if (freq > max_freq || (freq == max_freq && password[i] < most_frequent)) {
            max_freq = freq;
            most_frequent = password[i];
        }

        i = j; // move to next distinct number
    }

    if (valid && has_exactly_two)
        printf("VALID\n");
    else
        printf("INVALID\n");

    printf("%d\n", most_frequent);
}

int main() {
    int N;
    scanf("%d", &N);
    int* password = (int*)malloc(N * sizeof(int));
    for (int i = 0; i < N; i++) {
        scanf("%d", &password[i]);
    }

    validate_password(password, N);

    free(password);
    return 0;
}
